services:
  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: dbbench-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: [ "${POSTGRES_PORT}:5432" ]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
    deploy:
      resources: { limits: { cpus: "${DB_CPUS}", memory: "${DB_MEM}" } }
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

  mysql:
    image: ${MYSQL_IMAGE}
    container_name: dbbench-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports: [ "${MYSQL_PORT}:3306" ]
    volumes:
      - mysqldata:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d:ro
    deploy:
      resources: { limits: { cpus: "${DB_CPUS}", memory: "${DB_MEM}" } }
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--password=${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  mongodb:
    image: ${MONGO_IMAGE}
    container_name: dbbench-mongo
    ports: [ "${MONGO_PORT}:27017" ]
    volumes:
      - mongodata:/data/db
      - mongoconfig:/data/configdb
      - ./docker/mongo/init:/docker-entrypoint-initdb.d:ro
      - ./data:/imports:ro
    deploy:
      resources: { limits: { cpus: "${DB_CPUS}", memory: "${DB_MEM}" } }
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10

  cassandra:
    image: ${CASSANDRA_IMAGE}
    container_name: dbbench-cassandra
    environment:
      - MAX_HEAP_SIZE=2G
      - HEAP_NEWSIZE=512M
      - JVM_OPTS=-Dcassandra.skip_wait_for_gossip_to_settle=0
    ports: [ "${CASSANDRA_PORT}:9042" ]
    volumes:
      - cassdata:/var/lib/cassandra
      - ./docker/cassandra/init:/docker-entrypoint-initdb.d:ro
      - ./data:/imports:ro
    deploy:
      resources: { limits: { cpus: "${DB_CPUS}", memory: "${DB_MEM}" } }
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'SHOW VERSION' 127.0.0.1 9042 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 20

  runner:
    image: python:3.11-slim
    container_name: dbbench-runner
    working_dir: /app
    volumes:
      - ./runner:/app
      - ./data:/data:ro
      - ./data:/data
    depends_on:
      postgres: { condition: service_healthy }
      mysql: { condition: service_healthy }
      mongodb: { condition: service_healthy }
      cassandra: { condition: service_healthy }
    command: ["bash", "-lc", "sleep infinity"]
    deploy:
      resources: { limits: { cpus: "1.5", memory: "1g" } }

volumes:
  pgdata:
  mysqldata:
  mongodata:
  mongoconfig:
  cassdata:
